<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:viewer="com.esri.viewer.*"				   
				   xmlns:components="com.esri.viewer.components.*"
				   xmlns:esri="http://www.esri.com/2008/ags"  
				   initialize="basewidget1_initializeHandler(event)" 
				   creationComplete="basewidget1_creationCompleteHandler(event)"
				   >	
	
	<viewer:states>
		<s:State name="bkmInit"/>
		<s:State name="bkmConsulta"/>
		
	</viewer:states>
	<viewer:transitions>
		<s:Transition autoReverse="true" toState="*">
			<s:Fade targets="{[bkmInit,bkmConsulta]}"/>
		</s:Transition>
	</viewer:transitions>
	
	<fx:Declarations>
		<s:GlowFilter id="glowFilter"
					  alpha="1"
					  color="{getStyle('focusColor')}"
					  inner="true"
					  strength="2"/>
		
		<s:DateTimeFormatter id="dateFormatter" dateTimePattern="dd/MM/yyyy"/>
		
		<esri:SimpleMarkerSymbol id="smsIdentify"
								 alpha="0.5"
								 color="0xFF9900"
								 size="20"
								 style="circle"/>
		
		<mx:WipeUp id="myWU" duration="300"/>
		<mx:WipeDown id="myWD" duration="500"/>
		<mx:WipeRight id="myWR" duration="850"/>
		<esri:GraphicsLayer id="graphicsLayer" />
		
		<esri:Map id="map">
			<esri:infoWindowContent>
				<s:TextArea id="myTextArea"
							width="250" height="75"/>
			</esri:infoWindowContent>
			
			<esri:FeatureLayer 
				id="lecturasLayer"
				outFields="*"
				mode="onDemand"	
				graphicAdd="verElemento(event)"
				url="https://gisredint.chilquinta.cl/arcgis/rest/services/CECOM/Reparto_view/MapServer/0"
				>
			</esri:FeatureLayer>
			
		</esri:Map>
		
		
		<esri:SimpleFillSymbol id="mouseOverSymbol" alpha="0.5">
			<esri:SimpleLineSymbol width="0" color="0xFF0000"/>
		</esri:SimpleFillSymbol>
		<esri:SimpleFillSymbol id="defaultsym" alpha="0.2">
			<esri:SimpleLineSymbol width="1" color="0xEEEEEE"/>
		</esri:SimpleFillSymbol>
		
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.esri.ags.FeatureSet;
			import com.esri.ags.Graphic;
			import com.esri.ags.events.GraphicEvent;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.layers.ArcGISDynamicMapServiceLayer;
			import com.esri.ags.layers.FeatureLayer;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.ags.portal.PopUpRenderer;
			import com.esri.ags.tasks.QueryTask;
			import com.esri.ags.tasks.supportClasses.Query;
			
			import comun.Planificacion.User;
			import comun.url.URL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ToolTipEvent;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.AsyncResponder;
			import mx.utils.StringUtil;
			
			import widgets.AdminRepartos.utilidad.urls;
			
			private var popUpRenderer:PopUpRenderer = new PopUpRenderer();
			
			
			[Bindable] public var idPosteNuevo:String;
			[Bindable] public var idDirNueva:String;
			[Bindable] public var rotNuevo:String;
			[Bindable] public var dirNueva:String;
			
			[Bindable] public var coleccionClientes:ArrayCollection = new ArrayCollection;
			[Bindable] public var coleccionEstados:ArrayCollection = new ArrayCollection;
			
			
			[Bindable] public var fs:FeatureSet = new FeatureSet;
			[Bindable] public var rotu:int;
			[Bindable] public var rotuloEncontrado:String;
			[Bindable] public var direccionCompleta:String;
			[Bindable] public var nisBuscado:String;
			[Bindable] public var anexo1:String;
			[Bindable] public var anexo2:String;
			[Bindable] public var tipoEdificacion:String;
			public var myGraphicsLayer:GraphicsLayer =  new GraphicsLayer;
			
			private var ColeccionUser:ArrayCollection = new ArrayCollection;
			private var text1:String;
			
			import org.example.components.PanelToolTipReparto;
			protected var ptt:PanelToolTipReparto = new PanelToolTipReparto();
			
			[Bindable] public var coleccionEmpresa:ArrayCollection = new ArrayCollection;
			
			//public var lecturasLayer:ArcGISDynamicMapServiceLayer= new ArcGISDynamicMapServiceLayer(widgets.AdminLectores.utilidad.urls.URL_LECTURAS_DYN);
			
			protected function basewidget1_initializeHandler(event:FlexEvent):void{
				ConsultarAcceso();
				//DataViewRepartos.selectedIndex = 1;
			}
			
			public function openLayer():void{
				lecturasLayer.name = "Ingreso Reparto";
				map.addLayer(lecturasLayer);				
				lecturasLayer.visible = true;	
			}
			
			protected function verElemento(event:GraphicEvent):void
			{
				var graphic:Graphic = event.graphic;				
				graphic.toolTip = " ";
				graphic.addEventListener(ToolTipEvent.TOOL_TIP_CREATE, stateToolTipCreateHandler, false, 0, true);		
			}
			
			//Crea Tooltip al objeto grafico			
			protected function stateToolTipCreateHandler(event:ToolTipEvent):void
			{
				var graphic:Graphic = event.currentTarget as Graphic;
				ptt.title = "ID: " + graphic.attributes.OBJECTID;
				ptt.nis = graphic.attributes.nis;
				ptt.valor_captura = graphic.attributes.valor_captura;
				ptt.empresa = graphic.attributes.empresa ;
				ptt.created_user = graphic.attributes.created_user ;
				
				
				/*ptt.TipoConexion = graphic.attributes.TIPO_CONEXION;
				ptt.Potencia = graphic.attributes.POTENCIA;
				ptt.Tipo = graphic.attributes.TIPO;
				ptt.Propiedad = graphic.attributes.PROPIEDAD;
				ptt.Medido = graphic.attributes.MEDIDO;
				*/
				event.toolTip = ptt;
			}
			
			protected function ConsultarAcceso():void{
				
				var queryTaskUserSelected:QueryTask = new QueryTask();
				queryTaskUserSelected.url = comun.url.URL.URL_ACCESO;
				queryTaskUserSelected.useAMF = false;
				var queryEquipoSelected:Query = new Query();
				queryEquipoSelected.outFields = ["*"];
				queryEquipoSelected.returnGeometry = true;     
				queryEquipoSelected.orderByFields = ["usuario"];
				queryEquipoSelected.where = "usuario = '" + User.Usuario + "' AND MODULO ='INGRESO_CLIENTES' AND widget='ADMINREPARTOS'" ;
				queryEquipoSelected.spatialRelationship ="esriSpatialRelIntersects";
				queryEquipoSelected.outSpatialReference = map.spatialReference;
				queryTaskUserSelected.execute(queryEquipoSelected, new AsyncResponder(onResult, onFault));
				
				function onResult(featureSet:FeatureSet, token:Object = null):void{
					
					if(featureSet.features.length == 0 ){
						//Alert.show("No tiene permisos para accesder a este modulo\n Comuniquese con el administrador de GISRED")
						//currentState = "bkmInit"; 
						currentState ="bkmInit";
						lblwarning.visible = true;
						lblwarning2.visible = true;
						pbGisred.visible = true;
						wTemplate.height = 500;
						wTemplate.width = 800;
					}
						//si hay, cuales son los permisos
					else{   
						
						ColeccionUser.addAll(new ArrayCollection(featureSet.attributes));
						
						for(var i:int=0;i<=ColeccionUser.length-1;i++){	
							
							if(ColeccionUser[i].select_ == 'FALSE'){
								btnExportarDatosClientes.enabled = false;
							}else{
								btnExportarDatosClientes.enabled = true;
							}
							
							if( ColeccionUser[i].update_ == 'FALSE'){
								//DDLEstadoCliente.enabled = false;
								//btnCambiarEstadoCliente.enabled = false;
								
								
							}else{
								//DDLEstadoCliente.enabled = true;
								//btnCambiarEstadoCliente.enabled = true;
								
							}
							
						}
						
						
						cargarListaClientesNuevos();
						//txtFilterClientes.addEventListener(Event.CHANGE,filterGridClientes);
						
						currentState ="bkmConsulta";
						wTemplate.height = 500;
						wTemplate.width = 800;
						//openLayer()
					}
				}
				
				
				
				function onFault(info:Object, token:Object = null):void
				{   
					Alert.show("No tiene permisos para accesder a este modulo\n Comuniquese con el administrador");
					currentState ="bkmInit";
					lblwarning.visible = true;
					lblwarning2.visible = true;
					pbGisred.visible = true;
					wTemplate.width = 800;
					wTemplate.height = 500;
				}
			}
			
			
			//Filtra Listado de Solicitudes ingresadas en Textbox
			/*protected function filterGridClientes(event:Event):void
			{
				
				var filterText:String = StringUtil.trim(txtFilterClientes.text.toLowerCase()); //Trimmed text String to filter by
				var columnArray:Array = ['OBJECTID','nro_medidor','estado','tipo_edificacion','poste','direccion','estado_revision','lector','lectura_actual','created_user', 'created_date', 'estado_final']; //Datagrid column names to filter on
				var gridDataProvider:ArrayCollection = this.coleccionClientes as ArrayCollection; //Name of datagrid's dataprovider. In this case e.g. databases
				var dataGridName:String = 'DataViewRepartos'; //Name of the datagrid you are filtering by
				
				//Do not edit code past this point
				var filteredData:Array = [];
				var added:Boolean=false;
				var i:int;
				var j:int;
				
				// Loop Through Grid
				for(i=0; i < gridDataProvider.length; i++){    
					added = false;
					
					//Loop through grid column
					for(j=0; j<columnArray.length; j++){            
						if(gridDataProvider[i][columnArray[j]]!=null){
							
							//Grab datagrid cell contents, trim it, and convert to lowercase for comparison.
							var filterString:String = gridDataProvider[i][columnArray[j]].toString().toLowerCase();
							
							//Compare the datagrid string(filterString) to the user typed string(filterText).  
							if(!added){      
								//If the datagrid string matches the users string, put it into the array.
								if(filterString.indexOf(filterText) != -1){
									filteredData.push(gridDataProvider[i]);
									added = true;
								} 
							}else{
								//Do nothing, break out.
								break;
							}
						}    
					}
				}
				
				//Set datagrid dataprovider
				if(filterText.length == 0){
					this[dataGridName].dataProvider = gridDataProvider; //Display the original unfiltered data
				}else{
					this[dataGridName].dataProvider = filteredData; //Pusht he filtered data into the datagrid
				}
			}	
			*/
			public function cargarListaClientesNuevosRango():void {
				var whereSql:String = "";
				var fecha:String= "";
				var user: String="";
				var empresa: String = "empresa = 'chilquinta'";
				var arrWhere:Array = [];
				
				//tiene fecha inicial
				if ((dateDesde.text.length > 0) && (dateHasta.text.length > 0) ){
					if ((dateDesde.text != "Desde") || (dateHasta.text != "Hasta")){
						fecha = "fecha >= '" + dateDesde.text + "' and fecha <='" + dateHasta.text + "'";
						arrWhere.push(fecha);
					}else{
						fecha = "";
					}
					
				}
				//tiene usuario inicial	
				if(txtUsuarios.text.length > 0){
					user = "created_user='" + txtUsuarios.text + "'";
					arrWhere.push(user);
				}
				//tiene empresa
				/*if(ddlEmpresa.selectedIndex > -1){
					empresa = "empresa='"+ ddlEmpresa.selectedItem.empresa + "'";
					arrWhere.push(empresa);
				}
				*/
				arrWhere.push(empresa);
				//Logica para cada control
				for(var i:int=0; i<arrWhere.length; i++){
					if(arrWhere[i].length>0){
						//Alert.show("largo arr" + arrWhere.length.toString() + "i status:" + i.toString());
						if(arrWhere.length == 1){
							whereSql = arrWhere[i];
						}else{
							if(i == arrWhere.length - 1){
								whereSql = whereSql + arrWhere[i];	
							}else{
								whereSql = whereSql + arrWhere[i] + " and ";	
							}
						}
					}
				}
				
				//Alert.show(whereSql);
				
				
				// TODO Auto-generated method stub
				coleccionClientes.removeAll();
				// TODO Auto-generated method stub
				var queryTask:QueryTask = new QueryTask(urls.URL_REPARTOS_VIEW);
				var query:Query = new Query();
				query.where = whereSql; 
				
			
				
				query.outFields = ['*'];
				query.orderByFields = ['fecha'];
				query.returnGeometry = true;
				query.outSpatialReference = map.spatialReference;
				queryTask.execute(query, new AsyncResponder(onResultQuery, onFaultQuery));
				
				
				
				function onResultQuery(featureSet:FeatureSet, token:Object = null):void
				{
					var k:int;
					
					
					for(k=0;k<featureSet.features.length;k++)
					{
						
						
						var recordGraphic:Graphic = featureSet.features[k];
						coleccionClientes.addItem({ESRI_OID:recordGraphic.attributes["ESRI_OID"], 
							created_user:recordGraphic.attributes["created_user"],
							fecha:recordGraphic.attributes["fecha"],
							cantidad:recordGraphic.attributes["cantidad"],
							gra:recordGraphic});		
					}
					
				}
				function onFaultQuery(info:Object, token:Object = null):void
				{   
					Alert.show("Error en consulta","Carga de Repartos");
				}
				
			}
			
			
			
			public function cargarListaClientesNuevos():void {
				// TODO Auto-generated method stub
				coleccionClientes.removeAll();
				DataViewRepartos.dataProvider = coleccionClientes;
				// TODO Auto-generated method stub
				var queryTask:QueryTask = new QueryTask(urls.URL_REPARTOS_VIEW);
				var query:Query = new Query();
				query.where = "1=1 and empresa = 'chilquinta'";
				query.outFields = ['*'];
				query.orderByFields = ['fecha'];
				query.returnGeometry = true;
				queryTask.execute(query, new AsyncResponder(onResultQuery, onFaultQuery));
				
				
				function onResultQuery(featureSet:FeatureSet, token:Object = null):void{
					var k:int;
					
					
					for(k=0;k<featureSet.features.length;k++)
					{
						
						//Evelyn Hernández - 14.6.2017 - Arreglando problema con valores nulos.
						var recordGraphic:Graphic = featureSet.features[k];
						coleccionClientes.addItem({ESRI_OID:recordGraphic.attributes["ESRI_OID"], 
							created_user:recordGraphic.attributes["created_user"],
							fecha:recordGraphic.attributes["fecha"],
							cantidad:recordGraphic.attributes["cantidad"],
							gra:recordGraphic});			
					}
					
					
				}
				function onFaultQuery(info:Object, token:Object = null):void
				{   
					Alert.show("Error en consulta","Carga de Repartos");
				}
			}
			
			
			protected function basewidget1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				DataViewRepartos.dataProvider = coleccionClientes;
			}
			
			public var myGraphic:Graphic;
			
			public var acPolyline:ArrayCollection = new ArrayCollection;
			
			public function DataClientesNuevos_itemClickHandler(event:ListEvent):void
			{
				
				var queryTask:QueryTask = new QueryTask(urls.URL_REPARTOS_VIEW);
				var query:Query = new Query();
				query.where = "ESRI_OID=" + DataViewRepartos.selectedItem['ESRI_OID'].toString();
				query.outFields=["*"];
				query.returnGeometry = true;
				queryTask.execute(query, new AsyncResponder(onResultQuery2, onFaultQuery2));
				
				
				function onResultQuery2(featureSet:FeatureSet, token:Object = null):void {
					//Alert.show("Elementos " + featureSet.features.length + " a:" + featureSet.features[0].attributes['OBJECTID'] + featureSet.features[0].geometry  );
					
					//Evelyn Hernández - 14.6.2017 - Arreglada lógica para nis sin geometría ni atributos específicos. 
					
					if(!featureSet.features.length){
						Alert.show("No hay repartos para mostrar.");
						return;	
					}else{
						if(!featureSet.features[0].geometry){
							myGraphicsLayer.clear();
							Alert.show("Reparto sin geometría para mostrar");
							
						}else{
							myGraphicsLayer.clear();
							map.level = 20;
							var mp:MapPoint=featureSet.features[0].geometry as MapPoint;
							
							var g:Graphic = new Graphic(mp,smsIdentify);
							
							
							myGraphicsLayer.add(g);
							map.addLayer(myGraphicsLayer);
							map.zoomTo(featureSet.features[0].geometry);
							
							
							
						}
						
					}
					
				}
				
				function onFaultQuery2(info:Object, token:Object = null):void{   
					Alert.show("Error al georeferenciar reparto, intente nuevamente");
				}
			}
			
			
			private var ef:ExcelFile;
			private var ba:ByteArray;
			private var fr:FileReference;
			private var frSave:FileReference;
			protected function btnExportarDatosClientes_clickHandler(event:MouseEvent):void
			{
				
				// TODO Auto-generated method stub
				switch(event.currentTarget.id)
				{
					case "btnExportarDatosClientes":
					{
						
						var s:Sheet = new Sheet();
						s.resize(coleccionClientes.length+1,12);
						s.setCell(0,0,"ESRI_OID");
						s.setCell(0,1,"created_user");
						s.setCell(0,2,"fecha");
						s.setCell(0,3,"cantidad");
						
						
						for(var j:int=0;j<coleccionClientes.length;j++)
						{
							s.setCell(j+1,0,coleccionClientes[j].ESRI_OID);										
							s.setCell(j+1,1,coleccionClientes[j].created_user);
							s.setCell(j+1,2,coleccionClientes[j].fecha);
							s.setCell(j+1,3,coleccionClientes[j].cantidad);
							
						
						}
						
						try {
							var fileTosave:ExcelFile = new ExcelFile();
							fileTosave.sheets.addItem(s);
							
							var fileBytes:ByteArray = fileTosave.saveToByteArray();
							frSave = new FileReference();
							frSave.save(fileBytes,"ExportacionRepartosView.xls");
							frSave.addEventListener(Event.COMPLETE,grabadoListo);
							
						}catch(e:ErrorMessage){
							Alert.show("Error al guardar archivo" + e);
							
						}
						
						break;
					}
						
						
					default:
					{
						//Alert.show("Ningun archivo ha sido generado");
						break;
					}
				}			
			}
			
			public function grabadoListo(event:Event):void{
				Alert.show("Listo");
			}
			
			protected function wTemplate_initializeHandler(event:FlexEvent):void
			{
				coleccionEstados.removeAll();
				coleccionEstados = new ArrayCollection(				
					[ {item:"REVISADO"},
						{item:""}]);
				
				
				//DDLEstadoCliente.dataProvider = coleccionEstados;
			}
			
			
			
			protected function bkmInit_initializeHandler(event:FlexEvent):void
			{
				
				// TODO Auto-generated method stub
				var verImageGISRED:Image = new Image;
				
				//imagen configuraciones
				verImageGISRED.scaleContent = true;
				verImageGISRED.maintainAspectRatio =false;
				verImageGISRED.percentWidth = 850;
				verImageGISRED.percentHeight = 500;
				verImageGISRED.source =  "assets/images/128x128.png";
				pbGisred.addChild(verImageGISRED);
				
				
			}
			protected function btnRangoFecha_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				cargarListaClientesNuevosRango();
			}
			private function dateChooser_init(dt:DateField):void {
				dt.text = "Desde";
				dt.dayNames=['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'];
				dt.monthNames=[	'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
					'Julio', 'Agosto', 'Septiembre', 'Octubre',
					'Noviembre', 'Diciembre'];
				dt.firstDayOfWeek = 1;
				dt.formatString = "DD/MM/YYYY";
			}
			private function dateChooser2_init(dt:DateField):void {
				dt.text = "Hasta";
				dt.dayNames=['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'];
				dt.monthNames=[	'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
					'Julio', 'Agosto', 'Septiembre', 'Octubre',
					'Noviembre', 'Diciembre'];
				dt.firstDayOfWeek = 1;
				dt.formatString = "DD/MM/YYYY";
			}
			
			protected function image1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				coleccionClientes.removeAll();
				//ddlEmpresa.selectedIndex = -1;
				cargarListaClientesNuevos();
				DataViewRepartos.dataProvider = coleccionClientes;
				
			}
			
			protected function wTemplate_closedHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				// TODO Auto-generated method stub
				map.removeLayer(lecturasLayer);
			}
			
			protected function wTemplate_openHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				//openLayer();
				coleccionEmpresa.removeAll();
				coleccionEmpresa = new ArrayCollection(				
					[ {empresa:"chilquinta"}]);
				
				
				//ddlEmpresa.dataProvider = coleccionEmpresa;
			}
			
		]]>
	</fx:Script>
	<viewer:WidgetTemplate id="wTemplate"                      
						   width="850" height="500"
						   visible="true" initialize="wTemplate_initializeHandler(event)" closed="wTemplate_closedHandler(event)" open="wTemplate_openHandler(event)">
		
		<s:Group id="bkmInit" width="100%" height="100%" initialize="bkmInit_initializeHandler(event)"
				 visible="false" visible.bkmInit="true">	
			<s:VGroup horizontalAlign="center" height="100%" width="100%" verticalAlign="middle">
				<mx:Canvas width="200" height="200" id="pbGisred" color="0x000000" horizontalScrollPolicy="off"
						   verticalScrollPolicy="off" visible="false"/>                                           
				<s:Label id="lblwarning" text="No tiene permisos para acceder a este módulo." 
						 fontSize="16" visible="false" paddingTop="10"/>
				<s:Label id="lblwarning2" text="Comuniquese con el administrador de GISRED" 
						 fontSize="16" visible="false" paddingTop="10"/>
			</s:VGroup>
		</s:Group> 
		
		<s:Group id="bkmConsulta"
				 width="100%" height="100%"
				 visible="false"
				 visible.bkmConsulta="true">
			
			
			
			<mx:Canvas id="ListadoClientes" label="Lista Lecturas" width="100%" height="100%">
				<s:VGroup width="100%" top="5" bottom="5" height="80%">
					<mx:Label id="Lblclie" text="Listado de Repartos" fontSize="18"/>
					
					<s:HGroup width="100%">
						<s:HGroup horizontalAlign="left" width="100%">
							<mx:DateField id="dateDesde" formatString="DD/MM/YYYY" creationComplete="dateChooser_init(dateDesde)" text=""/>
							<mx:DateField id="dateHasta" formatString="DD/MM/YYYY" creationComplete="dateChooser2_init(dateHasta)" text=""/>
							<mx:Label text="Usuario: "></mx:Label>
							<mx:TextInput id="txtUsuarios" width="100%" fontSize="14" fontWeight="bold"  />
							<!-- <s:DropDownList id="ddlEmpresa"  
											prompt="Seleccione Empresa"
											labelField="empresa"/>
							-->
							<s:Button id="btnRangoFecha" label="Consultar" click="btnRangoFecha_clickHandler(event)"/> 
							<s:Button id="btnExportarDatosClientes" label="Exportar Listado" click="btnExportarDatosClientes_clickHandler(event)"/>
							<mx:Image x="504" y="10" width="35" height="33"  source="assets/images/refresh_1.png" click="image1_clickHandler(event)" />
						</s:HGroup>
						
					</s:HGroup>
			
					<mx:DataGrid id="DataViewRepartos" resizableColumns="true" sortableColumns="true" editable="false"  
								 width="100%" height="100%" visible="true" selectable="true">
						<mx:columns>        
							<mx:DataGridColumn  dataField="ESRI_OID" headerText="ESRI_OID" width="30" visible="true"/>                                                         
							
							<mx:DataGridColumn dataField="created_user" headerText="CREADOR" width="50" /> 
							<mx:DataGridColumn dataField="fecha" headerText="FECHA" visible="true" width="50" />
							<mx:DataGridColumn dataField="cantidad" headerText="CANTIDAD" width="50"/>
													
						</mx:columns>
					</mx:DataGrid> 
					
				</s:VGroup>
				
				
			</mx:Canvas>
			
			
			
		</s:Group>
		
		
		
	</viewer:WidgetTemplate>
</viewer:BaseWidget>