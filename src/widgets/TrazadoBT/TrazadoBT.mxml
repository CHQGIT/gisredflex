<?xml version="1.0" encoding="utf-8"?>
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:viewer="com.esri.viewer.*"
				   xmlns:esri="http://www.esri.com/2008/ags"				   
				   layout="vertical">

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<esri:SimpleLineSymbol id="slsFindMedidorxTramo"
							   width="5"
							   alpha="0.9"
							   color="0xFF0033"
							   style="solid"/>
		<esri:GraphicsLayer id="graphicsLayer" />
		
		<s:Move id="view1ShowEffect" xFrom="{-stack.width}" xTo="0" />
		<s:Move id="view1HideEffect" xFrom="0" xTo="{-stack.width}" />
		<s:Move id="view2ShowEffect" xFrom="{stack.width}" xTo="0" />
		<s:Move id="view2HideEffect" xFrom="0" xTo="{stack.width}" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.esri.ags.FeatureSet;
			import com.esri.ags.Graphic;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.ags.tasks.QueryTask;
			import com.esri.ags.tasks.supportClasses.Query;
			
			import flash.events.TimerEvent;
			import flash.utils.Timer;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.messaging.messages.ErrorMessage;
			import mx.rpc.AsyncResponder;
			
			import spark.components.RadioButton;
			public var graphicsLayer1:GraphicsLayer  = null;
			public var acPolyline:ArrayCollection = new ArrayCollection;
			public var mostrar:Boolean = false;
			private var frSave:FileReference;
			private var frSave2:FileReference;
		
			[Bindable]
			private var coleccion:ArrayCollection = new ArrayCollection;
		
			[Bindable]
			private var coleccion2:ArrayCollection = new ArrayCollection;
			
		private function wTemplate_closeHandler(event:Event):void
		{
			graphicsLayer.clear()
		}
		
		protected function wTemplate_openHandler(event:Event):void
		{
			wTemplate.resizable = false
		}
		
		protected function TrazadoRedBT():void
		{
			
			//graphicsLayer= null
			var queryTaskEquipoSelected:QueryTask = new QueryTask();
			queryTaskEquipoSelected.url = "https://gisredint.chilquinta.cl/arcgis/rest/services/Chilquinta_006/Tramos_006/MapServer/1/query";
			queryTaskEquipoSelected.useAMF = false;
			var queryEquipoSelected:Query = new Query();
			queryEquipoSelected.outFields = ["*"];
			queryEquipoSelected.returnGeometry = true;
			
			queryEquipoSelected.where = "sed=" + txtSED.text;
			queryEquipoSelected.spatialRelationship ="esriSpatialRelIntersects";
			queryEquipoSelected.outSpatialReference = map.spatialReference;
			queryTaskEquipoSelected.execute(queryEquipoSelected, new AsyncResponder(onResult, onFault));
			
			var arrPoints:Array = new Array;
			function onResult(featureSet:FeatureSet, token:Object = null):void
			{
				/*var cont:int = 0;
				var elementos:Number=featureSet.features.length;
				Alert.show("numero de elementos"+elementos);*/
				
				if(featureSet.features.length == 0 ){
					Alert.show("SED no no encontrada")
				}
				else{			

					try{
						for each (var myGraphic:Graphic in featureSet.features)
						{
							
								myGraphic.symbol=new SimpleLineSymbol(LineStyle.selectedItem.style,cpMarker.selectedColor,numLineAlpha.value,numLineSize.value);
								graphicsLayer.add(myGraphic);
								map.zoomTo(featureSet.features[0].geometry);				
								map.level = 16;	
							
						}
						
					}catch(err:Error){
						Alert.show("SED no encontrada");
					}
				
				}
			}		
			
			
			function onFault(info:Object, token:Object = null):void
			{   
				Alert.show("Error en consulta");
			}
		}
	
			protected function btnGrafSED_clickHandler(event:MouseEvent):void
			{
				ejecutar();
			}
			protected function txtSED_enterHandler(event:FlexEvent):void
			{
				ejecutar();
			}
			protected function ejecutar():void
			{
				graphicsLayer.clear();
				// TODO Auto-generated method stub
				TrazadoRedBT();
				map.addLayer(graphicsLayer);
				
			
				var new_timer:Timer = new Timer(500, 2);
				
				// function on_tick() will be called every 500 millisec
				new_timer.addEventListener(TimerEvent.TIMER, on_tick);
				// function timer_complete will be called once the timer expires, 2 secs in this case
				new_timer.addEventListener(TimerEvent.TIMER_COMPLETE, timer_complete);
				// Start the timer
				new_timer.start();
				
				function on_tick(event:TimerEvent):void {
					// some code
					agregarItems();
					DataCliente.dataProvider = coleccion;
					stack.selectedChild = view2;
				}
				
				function timer_complete(event:TimerEvent):void {
					// some code
					
					agregarItems2();
					DataPoste.dataProvider = coleccion2;
					stack.selectedChild = view1;
					RadClientes.selected = true;
				
				}	
			
			}
			protected function getLongestString(... rest):String
			{
				var longest:String = "";
				for (var i:int = 0; i < rest.length; i++)
				{
					var n:String = getDefaultString(rest[i]);
					longest = n.length > longest.length ? n : longest;
				}
				return longest;
			}					
			
			protected function btnTABLE_clickHandler(event:MouseEvent):void
			{
				// Maneja evento clic mostrar y oculatar ventana
				if(mostrar ==false)
				{
					wTemplate.height=500;
					mostrar =true;			
					
				}
				else
				{
					mostrar = false;
					wTemplate.height=205;					
				}
					
			}
			
			public function agregarItems():void
			{
				coleccion.removeAll();
			//	acPolyline.removeAll();
				var queryTaskEq:QueryTask = new QueryTask();
				queryTaskEq.url = "https://gisredint.chilquinta.cl/arcgis/rest/services/Chilquinta_006/ClientesV2/MapServer/0";				
				queryTaskEq.useAMF = false;
				var queryEq:Query = new Query();
				queryEq.outFields = ["*"];
				queryEq.returnGeometry = true;
				
				queryEq.where = "ARCGIS.dbo.CLIENTES_DATA_DATOS_006.resp_id_sed=" + txtSED.text;	
				queryEq.spatialRelationship ="esriSpatialRelIntersects";
				queryEq.outSpatialReference = map.spatialReference;
				queryTaskEq.execute(queryEq, new AsyncResponder(onResult, onFault));
				
				function onResult(featureSet:FeatureSet, token:Object = null):void
				{
					try{
						// dgridEquipos.dataProvider = new ArrayCollection(featureSet.attributes);
						
						//antiguo
						//coleccion.addAll(new ArrayCollection(featureSet.attributes));
						
						//nuevo 28/10/2015
						for each (var myGraphic:Graphic in featureSet.features)
						{
							coleccion.addItem({nis:myGraphic.attributes['ARCGIS.dbo.CLIENTES_DATA_DATOS_006.nis'],
											 	tarifa:myGraphic.attributes['ARCGIS.dbo.CLIENTES_DATA_DATOS_006.nm_tarifa'],
												direccion:myGraphic.attributes['ARCGIS.dbo.CLIENTES_DATA_DATOS_006.direccion_resu'],
												tipo_cliente:myGraphic.attributes['ARCGIS.dbo.CLIENTES_DATA_DATOS_006.resp_tipo_cliente']}); 
							
						}
					
					}catch(err:Error){
					//	Alert.show("no se pudo cargar los datos");
					}
					
				}
				
				function onFault(info:Object, token:Object = null):void
				{   
				//	Alert.show("equipos no encontrados");
				}
				
			}
			public function agregarItems2():void
			{
				coleccion2.removeAll();
	
				//acPolyline.removeAll();
				var queryTaskPoste:QueryTask = new QueryTask();
				queryTaskPoste.url = "https://gisredint.chilquinta.cl/arcgis/rest/services/Chilquinta_006/Nodos_006/MapServer/0/query";
				queryTaskPoste.useAMF = false;
				var queryPoste:Query = new Query();
				queryPoste.outFields = ["*"];
				queryPoste.returnGeometry = true;				
				queryPoste.where = "sed=" + txtSED.text + " and tipo_nodo= 'ele!poste'";	
				queryPoste.spatialRelationship ="esriSpatialRelIntersects";
				queryPoste.outSpatialReference = map.spatialReference;
				queryTaskPoste.execute(queryPoste, new AsyncResponder(onResult, onFault));
				
				
					
				function onResult(featureSet:FeatureSet, token:Object = null):void
				{
					try{
						// dgridEquipos.dataProvider = new ArrayCollection(featureSet.attributes);
						
						coleccion2.addAll(new ArrayCollection(featureSet.attributes));		
						
						
						
					}catch(err:Error){
					//	Alert.show("no se pudo cargar los datos");
					}					
				}
				
				function onFault(info:Object, token:Object = null):void
				{   
					//Alert.show("equipos no encontrados");
				}
				
			}
			
			public function generateXLS(event:MouseEvent):void
			{
				
				
				switch(RadClientes.selected)
				{
					
					case false:
					{
						
						
						var s:Sheet = new Sheet();
						s.resize(coleccion2.length+1,5);
						s.setCell(0,0,"Rotulo");
						s.setCell(0,1,"Tipo");
						s.setCell(0,2,"Propiedad");
						s.setCell(0,3,"CUDN");
						
						for(var j:int=0;j<coleccion2.length;j++)
						{
							s.setCell(j+1,0,coleccion2[j].rotulo);
							s.setCell(j+1,1,coleccion2[j].tipo);
							s.setCell(j+1,2,coleccion2[j].propiedad);
							s.setCell(j+1,3,coleccion2[j].cudn);
							
							
						}
						
						try {
							var fileTosave:ExcelFile = new ExcelFile();
							fileTosave.sheets.addItem(s);
							var fileBytes:ByteArray = fileTosave.saveToByteArray();
							frSave = new FileReference();
							frSave.save(fileBytes, "Postes_SED_"+ txtSED.text + ".xls");
							frSave.addEventListener(Event.COMPLETE,grabadoListo);
							//	statuslbl2.text = "Archivo Guardado";
							
							
							
						}catch(e:ErrorMessage){
							Alert.show("Error al guardar archivo" + e);
							//statuslbl2.text = "Archivo no Guardado";
						}
						break;
					}
						
					default:
					{
						//Alert.show("caso true");
						var s2:Sheet = new Sheet();
						s2.resize(coleccion.length+1,5);
						s2.setCell(0,0,"NIS");
						s2.setCell(0,1,"Tarifa");
						s2.setCell(0,2,"Direccion");						
						s2.setCell(0,3,"Tipo");
						
						for(var k:int=0;k<coleccion.length;k++)
						{
							s2.setCell(k+1,0,coleccion[k].nis);
							s2.setCell(k+1,1,coleccion[k].tarifa);
							s2.setCell(k+1,2,coleccion[k].direccion);
							s2.setCell(k+1,3,coleccion[k].tipo_cliente);							
							
						}
						
						try {
							var fileTosave2:ExcelFile = new ExcelFile();
							fileTosave2.sheets.addItem(s2);
							var fileBytes2:ByteArray = fileTosave2.saveToByteArray();
							frSave2 = new FileReference();
							frSave2.save(fileBytes2,"Clientes_SED_" + txtSED.text + ".xls");
							frSave2.addEventListener(Event.COMPLETE,grabadoListo);
							//statuslbl.text = "Archivo Guardado";
						}
						catch(e:ErrorMessage)
						{
							Alert.show("Error al guardar archivo" + e);
							//statuslbl.text = "Archivo no Guardado";
						}
						break;
					}
				}
			}	
				
			
			public function grabadoListo(event:Event):void{
				Alert.show("Archivo creado exitosamente");
			}
			
			
			protected function RadPostes_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				stack.selectedChild = view2;		
			}
			private function getLabel(item:Object,column:GridColumn):String{  
				return item[column.dataField];  
			}  		
		]]>
	</fx:Script>
	
	<viewer:WidgetTemplate id="wTemplate" width="410" height="205" closed="wTemplate_closeHandler(event)"
						   open="wTemplate_openHandler(event)" resizable="true">
		<mx:Form height="100%">	
			<s:VGroup>			
				<s:HGroup width="100%" gap="25" verticalAlign="middle">				
					<s:Label id="lblsed" text="Ingrese SED a graficar"/>				
					<s:TextInput id="txtSED" restrict="0-9" maxChars="5" width="100%" enter="txtSED_enterHandler(event)"
								 toolTip="Ej: 10118"/>				
				</s:HGroup>		
					<mx:FormItem verticalCenter="middle" width="100%" label="Line Color">		
						<s:HGroup width="100%" gap="55" verticalAlign="middle">
							<mx:ColorPicker id="cpMarker" selectedColor="0xFF0000"/>
							<s:HGroup width="100%" gap="24" verticalAlign="middle">
								<mx:Label text="Style"/>						
								<s:DropDownList id="LineStyle" width="100%" labelField="name" selectedIndex="0">
									<s:typicalItem>
										<fx:Object name="{getLongestString('lineStyleSolid',
												   							'lineStyleDash',
												   							'lineStyleDot',
												   							'lineStyleDashDot',
												   							'lineStyleDashDotDot')}"/>
									</s:typicalItem>
									<s:ArrayList>
										<fx:Object name="{getDefaultString('lineStyleSolid')}" style="{SimpleLineSymbol.STYLE_SOLID}"/>
										<fx:Object name="{getDefaultString('lineStyleDash')}" style="{SimpleLineSymbol.STYLE_DASH}"/>
										<fx:Object name="{getDefaultString('lineStyleDot')}" style="{SimpleLineSymbol.STYLE_DOT}"/>
										<fx:Object name="{getDefaultString('lineStyleDashDot')}" style="{SimpleLineSymbol.STYLE_DASHDOT}"/>
										<fx:Object name="{getDefaultString('lineStyleDashDotDot')}" style="{SimpleLineSymbol.STYLE_DASHDOTDOT}"/>
									</s:ArrayList>
								</s:DropDownList>
							</s:HGroup>
						</s:HGroup>
					</mx:FormItem>
					<mx:FormItem verticalCenter="middle" width="100%" label="Width">
						<s:HGroup width="100%" gap="24" verticalAlign="middle">
						<!-- Change gap from 21 to 7 -->
							<mx:NumericStepper id="numLineSize" maximum="10" minimum="0" value="3"/>
							<s:HGroup width="100%" gap="20" verticalAlign="middle">
								<s:Label text="Alpha"/>
								<mx:NumericStepper id="numLineAlpha" maximum="1" minimum="0" stepSize="0.1" value="1"/>
						<!-- My Add -->
							</s:HGroup>
						</s:HGroup>
					</mx:FormItem>
			<s:HGroup width="100%" gap="30" horizontalAlign="center" height="70" verticalAlign="middle">			
				<s:Button id="btnGrafSED" height="26" label="Graficar" click="btnGrafSED_clickHandler(event)"/>
				<s:Button id="btnTABLE" height="26" label="Elementos asociados" click="btnTABLE_clickHandler(event)"/>
			</s:HGroup>
			<mx:ViewStack id="stack"					
						  width="100%" height="100%"
						  selectedIndex="0">
				<s:NavigatorContent id="view1"><!-- hideEffect="{view1HideEffect}" 
									showEffect="{view1ShowEffect}"-->
							
					<s:DataGrid id="DataCliente" resizableColumns="true"  sortableColumns="true" contentBackgroundAlpha="1"  width="100%" height="180" visible="true" editable="false" bottom="1"  >
						<s:columns>
							<s:ArrayList>								
								<s:GridColumn dataField="nis" labelFunction="getLabel" headerText="NIS"></s:GridColumn>
								<s:GridColumn dataField="tarifa" labelFunction="getLabel" headerText="Tarifa"></s:GridColumn>
								<s:GridColumn dataField="direccion" labelFunction="getLabel" headerText="Direccion"></s:GridColumn>
								<s:GridColumn dataField="tipo_cliente" labelFunction="getLabel" headerText="Tipo"></s:GridColumn>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>
				</s:NavigatorContent>
				<s:NavigatorContent id="view2"><!-- hideEffect="{view2HideEffect}" 
									showEffect="{view2ShowEffect}">-->				
					<s:DataGrid id="DataPoste" resizableColumns="true"  sortableColumns="true" contentBackgroundAlpha="1"  width="100%" height="180" visible="true" editable="false" bottom="1"  >
						<s:columns>
							<s:ArrayList>								
								<s:GridColumn dataField="rotulo" headerText="Rotulo"></s:GridColumn>
								<s:GridColumn dataField="tipo" headerText="Tipo"></s:GridColumn>
								<s:GridColumn dataField="propiedad" headerText="Propiedad"></s:GridColumn>
								<s:GridColumn dataField="cudn" headerText="CUDN"></s:GridColumn>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>		
				</s:NavigatorContent>
				
			</mx:ViewStack>
				<s:HGroup>
					<mx:VBox verticalAlign="bottom" height="10%">
						<!--<s:RadioButton id="RadClientes" label="Clientes" click="stack.selectedChild = view1" selected="true"/>
						<s:RadioButton id="RadPostes" label="Postes" click="RadPostes_clickHandler(event)" />-->
						<s:RadioButton id="RadClientes" label="Clientes" click="stack.selectedChild = view1" selected="true"  />
						<s:RadioButton id="RadPostes" label="Postes" click="RadPostes_clickHandler(event)" />
					</mx:VBox>
					<s:Button id="Exportar" icon="assets/images/excel.png" skinClass="widgets.TrazadoBT.TransparentButtonSkin" click="generateXLS(event)" />
				</s:HGroup>		
								
			
			</s:VGroup>
		</mx:Form>	
		
	</viewer:WidgetTemplate>
	
</viewer:BaseWidget>
                                                                                                                                                                                                                                                                                                                                                                                                    